"""add_v2_related_columns_to_moneyboxes_table

Revision ID: 721c11601cb5
Revises: 653f527d540f
Create Date: 2024-08-04 02:47:25.024830

"""
import datetime
import uuid
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa

import sqlalchemy_utc

# revision identifiers, used by Alembic.
revision: str = '721c11601cb5'
down_revision: Union[str, None] = '653f527d540f'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.add_column('moneyboxes', sa.Column('savings_amount', sa.Integer(), server_default=sa.text('0'), nullable=False, comment='The current savings amount of the moneybox.'))
    op.add_column('moneyboxes', sa.Column('savings_target', sa.Integer(), nullable=True, comment='The current savings target. Is relevant for the automated distributed saving progress.'))
    op.add_column('moneyboxes', sa.Column('priority', sa.Integer(), nullable=True, comment='The current priority of the moneybox. There is only one moneybox with a priority of Null (will be the marker for the overflow moneybox.'))
    op.create_unique_constraint(op.f('uq_moneyboxes_priority'), 'moneyboxes', ['priority'])

    # Assign priority to existing moneyboxes
    connection = op.get_bind()
    moneyboxes = connection.execute(sa.text("SELECT id FROM moneyboxes ORDER BY id")).fetchall()

    for i, moneybox in enumerate(moneyboxes, start=1):
        connection.execute(
            sa.text("UPDATE moneyboxes SET priority = :priority WHERE id = :id"),
            {"priority": i, "id": moneybox[0]}
        )

    # Insert initial moneybox data with priority = NULL
    new_moneybox = {
        "name": str(uuid.uuid4()),
        "created_at": datetime.datetime.now(tz=datetime.timezone.utc),
        "balance": 0,
        "savings_amount": 0,
        "savings_target": None,
        "is_active": True,
        "priority": None
    }
    connection.execute(
        sa.text("""
                INSERT INTO moneyboxes (name, created_at, balance, savings_amount, savings_target, is_active, priority)
                VALUES (:name, :created_at, :balance, :savings_amount, :savings_target, :is_active, :priority)
            """).params(**new_moneybox)
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    connection = op.get_bind()
    connection.execute(
        sa.text("""
                DELETE FROM moneyboxes WHERE priority IS NULL
            """)
    )

    op.drop_constraint(op.f('uq_moneyboxes_priority'), 'moneyboxes', type_='unique')
    op.drop_column('moneyboxes', 'priority')
    op.drop_column('moneyboxes', 'savings_target')
    op.drop_column('moneyboxes', 'savings_amount')
    # ### end Alembic commands ###

"""add_automated_savings_logs_table

Revision ID: fac2992c1fdf
Revises: 83ce3642f332
Create Date: 2024-08-17 18:17:30.383983

"""

from typing import Sequence, Union

import sqlalchemy as sa

from alembic import op

# revision identifiers, used by Alembic.
revision: str = "fac2992c1fdf"
down_revision: Union[str, None] = "83ce3642f332"
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table(
        "automated_savings_logs",
        sa.Column(
            "action_at",
            sa.DateTime(timezone=True),
            nullable=False,
            comment="The utc datetime of the action.",
        ),
        sa.Column(
            "action",
            sa.Enum(
                "ACTIVATED_AUTOMATED_SAVING",
                "DEACTIVATED_AUTOMATED_SAVING",
                "APPLIED_AUTOMATED_SAVING",
                "CATCHED_UP_AUTOMATED_SAVING",
                "CHANGED_AUTOMATED_SAVINGS_AMOUNT",
                name="actiontype",
            ),
            nullable=False,
            comment="The action type within the automated savings and automated savings logs.",
        ),
        sa.Column(
            "details",
            sa.JSON(),
            nullable=True,
            comment="Metadata for the action, like app settings data.",
        ),
        sa.Column(
            "id", sa.Integer(), nullable=False, comment="The primary ID of the row."
        ),
        sa.Column(
            "created_at",
            sa.DateTime(timezone=True),
            server_default=sa.text("now()"),
            nullable=False,
            comment="The created utc datetime.",
        ),
        sa.Column(
            "modified_at",
            sa.DateTime(timezone=True),
            nullable=True,
            comment="The modified utc datetime.",
        ),
        sa.Column(
            "is_active",
            sa.Boolean(),
            server_default=sa.text("true"),
            nullable=False,
            comment="Flag to mark instance as deleted.",
        ),
        sa.Column(
            "note",
            sa.String(),
            server_default="",
            nullable=False,
            comment="The note of this record",
        ),
        sa.PrimaryKeyConstraint("id", name=op.f("pk_automated_savings_logs")),
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table("automated_savings_logs")

    # Drop the Enum type 'actiontype' manually
    op.execute("DROP TYPE IF EXISTS actiontype")
    # ### end Alembic commands ###

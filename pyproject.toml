[tool.poetry]
name = "Savings Manager"
version = "2.6.0"
description = "Manage your savings on your physical account via the app."
authors = ["'PythBuster' <'pythbuster@gmail.com'>"]
readme = "README.md"
packages = [
    { include = "src" },
]

[tool.poetry.dependencies]
python = "^3.11"
alembic = "^1.13.2"
sqlalchemy = {extras = ["asyncio"], version = "^2.0.31"}
pydantic = {extras = ["email"], version = "^2.8.2"}
pydantic-settings = "^2.4.0"
python-dotenv = "^1.0.1"
requests = "^2.32.3"
postgres = "^4.0"
asyncpg = "^0.29.0"
dictalchemy3 = "^1.0.0"
fastapi = {extras = ["standard"], version = "^0.112.1"}
uvicorn = {extras = ["standard"], version = "^0.30.6"}
jinja2 = "^3.1.4"
aiosmtplib = "^3.0.2"
tabulate = "^0.9.0"


[tool.poetry.group.dev.dependencies]
mypy = "^1.11.1"
black = {extras = ["jupyter"], version = ">=24.8.0"}
isort = "^5.13.2"
flake8-pyproject = "^1.2.3"
pylint = "^3.2.6"
pytest = "^8.3.2"
pytest-dependency = "^0.6.0"
sphinx = "^7.4.7"
pytest-asyncio = "0.21.2"
pytest-cov = "^4.1.0"
pylint-per-file-ignores = "^1.3.2"
vulture = "^2.11"
sphinx-rtd-theme = "^2.0.0"
httpx = "^0.26.0"
sqlalchemy-stubs = "^0.4"
pytest-order = "^1.2.1"


[tool.black]
line-length = 100
exclude = '''
/(
  | __pycache__
  | .mypy_cache
  | alembic
  | docs
  | envs
)/
'''


[tool.isort]
profile = "black"


[tool.flake8]
max-line-length = 100
exclude = '''
/(
  | __pycache__
  | .mypy_cache
  | alembic
  | docs
  | envs
  | tests/utils/db_test_data_initializer.py
)/
'''


[tool.mypy]
warn_redundant_casts = true
no_site_packages = true
no_implicit_optional = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
disallow_untyped_calls = true
ignore_missing_imports = true
warn_no_return = true
warn_unreachable = true
strict_equality = true


[tool.pylint.MASTER]
# Use multiple processes to speed up Pylint. Specifying 0 will auto-detect the
# number of processors available to use.
jobs=0
max-line-length=100
load-plugins=[
    "pylint_per_file_ignores",
]


# see: https://github.com/christopherpickering/pylint-per-file-ignores
[tool.pylint-per-file-ignores]
"test_task_runner.py"="missing-function-docstring"
"test_db_core.py"="missing-function-docstring"
"test_db_manager.py"="missing-function-docstring"
"test_moneybox_endpoints.py"="missing-function-docstring, too-many-locals, too-many-lines"
"test_prioritylist_endpoints.py"="missing-function-docstring"
"test_utils.py"="missing-function-docstring"
"test_custom_openapi_schema.py"="missing-function-docstring"
"/routes/"="missing-function-docstring"
"requests.py"="duplicate-code"
"responses.py"="duplicate-code"
"/routes/responses/__init__.py"="duplicate-code"
"src/db/__init__.py"="duplicate-code"
"db_test_data_initializer.py"="invalid-name, line-too-long"

[tool.pytest.ini_options]
asyncio_mode = "auto"
addopts = "--maxfail=1 --cov=src --cov-report html"
testpaths = [
    "tests",
]


[tool.coverage.run]
omit = [
    # omit this single files
    "src/main.py",
    ]

[tool.vulture]
ignore_decorators = ["@model_validator", "@pytest.fixture"]
paths = ["tests", "src", "docs/vulture_whitelist.def"]
sort_by_size = true
make_whitelist = false


[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"
